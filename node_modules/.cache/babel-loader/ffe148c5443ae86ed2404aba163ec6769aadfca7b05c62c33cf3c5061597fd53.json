{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/ExpensesApp/src/components/Expenses/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../charts/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense in props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nitro/Desktop/ExpensesApp/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\nimport Chart from \"../charts/Chart\";\n\nfunction ExpensesChart(props){\n    const chartDataPoints = [\n        {label:'Jan',  value:0},\n        {label:'Feb',  value:0},\n        {label:'Mar',  value:0},\n        {label:'Apr',  value:0},\n        {label:'May',  value:0},\n        {label:'Jun',  value:0},\n        {label:'Jul',  value:0},\n        {label:'Aug',  value:0},\n        {label:'Sep',  value:0},\n        {label:'Oct',  value:0},\n        {label:'Nov',  value:0},\n        {label:'Dec',  value:0}\n    ]\n    for (const expense in props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n\n    return(\n        <Chart dataPoints={chartDataPoints}/>\n    )\n\n}\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,aAAaA,CAACC,KAAK,EAAC;EACzB,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,CAC1B;EACD,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACzD;EAGA,oBACIX,OAAA,CAACF,KAAK;IAACc,UAAU,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAG7C;AAACC,EAAA,GAzBQhB,aAAa;AA0BtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}